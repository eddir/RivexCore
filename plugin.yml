#Name of your plugin. This is self-explanatory. Plugin names SHOULD NOT contain spaces.
name: RivexCore

#Fully-qualified class-name of your plugin's main class. This is usually the one that extends PluginBase.
#Since PocketMine-MP's autoloader is PSR-0, your plugin's main-class namespace will usually be the same as the folder path.
main: rivex\rivexcore\Main

#Version name/number of your plugin
version: 0.0.5

#API version that your plugin supports. If your plugin's API is not compatible with that of the server, the server will refuse to load your plugin.
#The API version is changed when:
# - Breaking changes are made to a development version, things that might cause your plugin to crash.
#     This is denoted by an API suffix, for example 3.0.0-ALPHA4. If the version does not match as a whole on a development version, the plugin will not be loaded. (Suffixes are non-case-sensitive.)
# - Breaking changes are made to a release version, things that might cause your plugin to crash.
#     This usually warrants a major API bump, e.g. 2.0.0 -> 3.0.0. If the major version does not match, the plugin will not be loaded.
# - Feature additions which do not break existing plugins.
#     This is denoted by a minor API bump, e.g. 2.0.0 -> 2.1.0. The server will load plugins with an equivalent or older minor version.
# - Minor bug fixes or insignificant alterations to the API.
#     This is denoted by a patch bump, e.g. 1.13.0 -> 1.13.1
api:
- 3.0.0
- 4.0.0

depend:
- DataBase

#When to load the plugin. There are currently two options for this: STARTUP and POSTWORLD. Usually POSTWORLD will do fine.
load: STARTUP

#Name of the person who wrote the plugin. This can be anything you like.
author: "Eduard Rostkov (eddir)"

#Simple description of what the plugin is or does. Try to keep this short.
description: Rivex core

#Website for your plugin. This could be a GitHub repository URL, a website of your own, or anything you like. This is optional.
website: http://rostkov.pro

#Define permissions used in your plugin here. You can check whether permissibles have permissions in your plugin to allow or disallow actions such as command execution.
permissions:
 #Root permission node
 rivex:
  #Default state of this permission. `op` means that only server operators will have this permission by default.
  default: false
  #Description of what the permission does or doesn't allow.
  description: "Allows do all in RivexCore"
  #Child permission nodes. If the parent permission node is true, the children will have the values set here. If false, all child permissions will be inverted.
  children:
   rivex.command:
    default: false
    description: "Allows to use commands"
    children:
     rivex.command.spawn:
      default: true
      description: "Allows to teleport to spawn location"
     rivex.command.help:
      default: true
      deacription: "Allows to get info from help command"
     rivex.command.report:
      default: true
      description: "Allows to send reports"
     rivex.command.fraction:
      default: true
      description: "Allows to use fraction command"
     rivex.command.ekill:
      description: "Allows to permanetly kill entity"
      default: op
     rivex.command.give:
      default: false
      description: "Allows to give items by command"
      children:
       rivex.command.give.use:
        default: op
        description: "Allows to give items yourself"
       rivex.command.give.other:
        default: op
        description: "Allows to give items for each other"
   rivex.action:
    default: false
    description: "Allows to use actions"
    children:
     rivex.action.fraction:
      default: false
      description: "Allows to use alliance commands"
      children:
       rivex.action.fraction.create:
       default: op
       description: "Allows to create alliance"
